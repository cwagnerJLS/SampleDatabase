# Generated by Django 5.1.1 on 2025-09-04 20:25

import django.db.models.deletion
import samples.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Opportunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opportunity_number', models.CharField(max_length=255, unique=True)),
                ('new', models.BooleanField(default=False)),
                ('sample_ids', models.TextField(blank=True)),
                ('update', models.BooleanField(default=True)),
                ('customer', models.CharField(blank=True, max_length=255, null=True)),
                ('rsm', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_received', models.DateField(blank=True, null=True)),
                ('sample_info_url', models.URLField(blank=True, null=True)),
                ('sample_info_id', models.CharField(blank=True, max_length=255, null=True)),
                ('export_count', models.IntegerField(default=0)),
                ('last_export_date', models.DateTimeField(blank=True, null=True)),
                ('first_export_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.PositiveIntegerField(editable=False, unique=True)),
                ('date_received', models.DateField()),
                ('customer', models.CharField(max_length=255)),
                ('opportunity_number', models.CharField(max_length=255)),
                ('rsm', models.CharField(max_length=255)),
                ('storage_location', models.CharField(blank=True, choices=[('Cooler #2', 'Cooler #2'), ('Freezer #5', 'Freezer #5'), ('Freezer #9', 'Freezer #9'), ('Walk-in Fridge', 'Walk-in Fridge'), ('Walk-in Freezer', 'Walk-in Freezer'), ('Dry Food Storage', 'Dry Food Storage'), ('Empty Case Storage', 'Empty Case Storage')], max_length=255, null=True)),
                ('quantity', models.IntegerField(default=1)),
                ('description', models.TextField(default='No description')),
                ('audit', models.BooleanField(default=False)),
                ('apps_eng', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('location_assigned_date', models.DateTimeField(blank=True, null=True)),
                ('audit_due_date', models.DateField(blank=True, null=True)),
                ('last_audit_date', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(db_index=True, max_length=100)),
                ('action', models.CharField(choices=[('SAMPLE_CREATE', 'Sample Created'), ('SAMPLE_UPDATE', 'Sample Updated'), ('SAMPLE_DELETE', 'Sample Deleted'), ('SAMPLE_REMOVE', 'Sample Removed from Inventory'), ('SAMPLE_AUDIT', 'Sample Audited'), ('LOCATION_CHANGE', 'Location Changed'), ('BULK_AUDIT', 'Bulk Audit'), ('BULK_DELETE', 'Bulk Delete'), ('BULK_LOCATION', 'Bulk Location Update'), ('BULK_REMOVE', 'Bulk Remove from Inventory'), ('IMAGE_UPLOAD', 'Image Uploaded'), ('IMAGE_DELETE', 'Image Deleted'), ('EXPORT', 'Data Exported'), ('PRINT_LABEL', 'Label Printed'), ('USER_LOGIN', 'User Identified'), ('PAGE_VIEW', 'Page Viewed'), ('SEARCH', 'Search Performed'), ('ERROR', 'Operation Failed')], db_index=True, max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('status', models.CharField(choices=[('SUCCESS', 'Success'), ('FAILED', 'Failed'), ('PARTIAL', 'Partial Success')], default='SUCCESS', max_length=20)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('object_type', models.CharField(blank=True, max_length=50, null=True)),
                ('object_id', models.CharField(blank=True, max_length=100, null=True)),
                ('customer', models.CharField(blank=True, db_index=True, max_length=200, null=True)),
                ('opportunity', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('changes', models.JSONField(blank=True, null=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('affected_count', models.IntegerField(default=1)),
                ('session_id', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Activity Log',
                'verbose_name_plural': 'Activity Logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['-timestamp', 'user'], name='samples_act_timesta_7ea073_idx'), models.Index(fields=['action', '-timestamp'], name='samples_act_action_3405b5_idx'), models.Index(fields=['object_type', 'object_id'], name='samples_act_object__e83caf_idx')],
            },
        ),
        migrations.CreateModel(
            name='SampleImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(storage=samples.models.CustomFileSystemStorage(), upload_to=samples.models.get_image_upload_path)),
                ('full_size_image', models.ImageField(blank=True, null=True, storage=samples.models.FullSizeImageStorage(), upload_to=samples.models.get_full_size_image_upload_path)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('sample', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='images', to='samples.sample')),
            ],
        ),
    ]
